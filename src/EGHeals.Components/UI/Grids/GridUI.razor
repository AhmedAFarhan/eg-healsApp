@typeparam TItem

<div class="grid-container @ContainerClass">
    <div class="grid @GetColumnsClass() @Class">
        @if (Items is null)
        {
            @for (int i = 0; i < SkeletonNum; i++)
            {
                @SkeletonContent
            }
        }
        else if (!Items.Any())
        {
            <div class="not-found">
                <img src="_content/EGHeals.Components/assets/images/not-found-128.png" />
                <p>No Items Found!</p>
            </div>
        }
        else
        {
            @foreach (var item in Items)
            {
                @CardContent(item)
            }
        }
    </div>
</div>


@code{

    [Parameter] public bool IsLoading { get; set; }

    [Parameter] public List<TItem> Items { get; set; } = default!;

    [Parameter] public RenderFragment SkeletonContent { get; set; } = default!;

    [Parameter] public RenderFragment<TItem> CardContent { get; set; } = default!;

    [Parameter] public string? ContainerClass { get; set; }

    [Parameter] public string? Class { get; set; }

    [Parameter] public int Columns { get; set; } = 2;

    [Parameter] public int SkeletonNum { get; set; } = 7;

    private string GetColumnsClass() => Columns switch
    {
        1 => "grid-cols-1",
        2 => "grid-cols-2",
        3 => "grid-cols-3",
        4 => "grid-cols-4",
        5 => "grid-cols-5",
        6 => "grid-cols-6",
        7 => "grid-cols-7",
        _ => "grid-cols-2"
    };
}