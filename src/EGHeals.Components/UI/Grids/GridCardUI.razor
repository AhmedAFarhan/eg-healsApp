<CardUI Class="@CardClass">
    <div class="card-content @Class">
        @if (PopupActions is not null)
        {
            <div class="card-content__action-content">
                <button class="card-content__action" @onclick="@OnTogglePopupHandler"><i class="fa-solid fa-ellipsis-vertical"></i></button>
                @if (showPopup)
                {
                    <ContextPopupUI Class="card-content__context-popup" OnCollapse="OnTogglePopupHandler">
                        <ul>
                            @PopupActions
                        </ul>
                    </ContextPopupUI>
                }
            </div>
        }
        <div class="card-content__content">
            @ChildContent
        </div>
        @if (OnFirstAction.HasDelegate || OnSecondAction.HasDelegate)
        {
            <div class="card-content__actions">
                @if (OnFirstAction.HasDelegate)
                {
                    <button class="card-content__action--1" @onclick="OnFirstAction">
                        <span><i class="fa-regular fa-pen-to-square"></i></span>
                        <span>@FirstActionText</span>
                    </button>
                }
                @if (OnSecondAction.HasDelegate)
                {
                    <button class="card-content__action--2" @onclick="OnSecondAction">
                        <span><i class="fa-regular fa-trash-xmark"></i></span>
                        <span>@SecondActionText</span>
                    </button>
                }               
            </div>
        }         
    </div>
</CardUI>

@code{

    private bool showPopup = false;

    [Parameter] public RenderFragment? ChildContent { get; set; }

    [Parameter] public RenderFragment? PopupActions { get; set; }

    [Parameter] public string? Class { get; set; }

    [Parameter] public string? CardClass { get; set; }

    [Parameter] public EventCallback OnFirstAction { get; set; }

    [Parameter] public EventCallback OnSecondAction { get; set; }

    [Parameter] public string FirstActionText { get; set; } = "Edit";

    [Parameter] public string SecondActionText { get; set; } = "Delete";

    private void OnTogglePopupHandler() => showPopup ^= true;
}