@using EGHeals.Components.Models.ModalPopups

@inject TaskHandlerService TaskHandlerService

<div class="message-box">
    <div class="message-box__header">
        <GlassWrapperUI class="@($"wrapper {GetTypeClass()}")">
            <i class="@GetIconClass()"></i>
        </GlassWrapperUI>
        <span class="message-box__title">@Title</span>
    </div>
    <div class="message-box__desc">
        @ChildContent
    </div>
    <MainButtonUI OnClick="OnClick" Color="@GetVariantClass(Type)">@BtnText</MainButtonUI>
</div>

@code{

    private AppColors Color = AppColors.PRIMARY;

    [CascadingParameter] public ModalContext Modal { get; set; } = default!;

    [Parameter] public string Title { get; set; } = default!;

    [Parameter] public RenderFragment ChildContent { get; set; } = default!;

    [Parameter] public string BtnText { get; set; } = "Ok";

    [Parameter] public string SuccessMsg { get; set; } = "Success";

    [Parameter] public MsgBoxType Type { get; set; } = MsgBoxType.INFO;

    [Parameter] public EventCallback OnClick { get; set; }

    private string GetTypeClass() => Type switch
    {
        MsgBoxType.INFO => "info",
        MsgBoxType.WARNING => "warning",
        MsgBoxType.ERROR => "error",
        _ => "info"
    };

    private string GetIconClass() => Type switch
    {
        MsgBoxType.INFO => "fa-sharp fa-solid fa-info",
        MsgBoxType.WARNING => "fa-solid fa-triangle-exclamation",
        MsgBoxType.ERROR => "fa-solid fa-xmark",
        _ => "fa-sharp fa-solid fa-info"
    };

    private AppColors GetVariantClass(MsgBoxType type) => type switch
    {
        MsgBoxType.INFO => AppColors.PRIMARY,
        MsgBoxType.WARNING => AppColors.SECONDARY,
        MsgBoxType.ERROR => AppColors.TERTIARY,
        _ => AppColors.PRIMARY
    };

}