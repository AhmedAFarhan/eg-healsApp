
<PageUI>
    <TableUI T="User"
             IsInitialLoading="IsInitialLoading"
             IsLoading="IsRefreshing"
             HasData="hasData"
             SkeletonRows="6"
             SkeletonColumns="3">
        <HeaderTemplate>
            <TableRow>
                <TableHeader>ID</TableHeader>
                <TableHeader>Name</TableHeader>
                <TableHeader>Email</TableHeader>
            </TableRow>
        </HeaderTemplate>
        <RowTemplate>
            @foreach (var user in Users ?? Enumerable.Empty<User>())
            {
                <TableRow>
                    <TableData>@user.Id</TableData>
                    <TableData>@user.Name</TableData>
                    <TableData>@user.Email</TableData>
                </TableRow>
            }
        </RowTemplate>
    </TableUI>
</PageUI>

@code {

    private bool IsInitialLoading { get; set; } = false;
    private bool IsRefreshing { get; set; } = false;
    private bool hasData => Users != null && Users.Any();
    private IEnumerable<User>? Users;

    protected override async Task OnInitializedAsync()
    {
        IsInitialLoading = true;

        await Task.Delay(5000);

        IsInitialLoading = false;

        var users = new List<User>();

        for (int i = 1; i <= 0; i++)
        {
            users.Add(new User
            {
                Id = i,
                Name = $"User {i}",
                Email = $"user{i}@example.com"
            });
        }

        Users = await Task.FromResult(users);

        StateHasChanged();

        await Task.Delay(5000);

        IsRefreshing = true;

        StateHasChanged();

        await Task.Delay(5000);

        IsRefreshing = false;

        StateHasChanged();
    }

    public class User
    {
        public int Id { get; set; }
        public string Name { get; set; } = "";
        public string Email { get; set; } = "";
    }
}