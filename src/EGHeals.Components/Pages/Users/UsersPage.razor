@using EGHeals.Domain.Models
@inject TaskHandlerService TaskHandlerService
@inject GlobalExceptionService GlobalExceptionService
@inject DatabaseSimulator DatabaseSimulator

<PageUI>
    <div class="user-page">
        <SkeltonLoadingContainer IsLoading="isInit">
            <Skeleton>
                <MainButtonSkeletonUI />
            </Skeleton>
            <ChildContent>
                <MainButtonUI Class="user-page__add-btn">New User</MainButtonUI>
            </ChildContent>
        </SkeltonLoadingContainer>        
        <UserListComponent IsLoading="isInit" />
        <SkeltonLoadingContainer IsLoading="isInit">
            <Skeleton>
                <PaginationSkeletonUI />
            </Skeleton>
            <ChildContent>
                <PaginationUI TotalPages="20" Page="5" />
            </ChildContent>
        </SkeltonLoadingContainer>
    </div>
</PageUI>

@code{

    private bool isInit = false;
    private IEnumerable<SystemUser> users = default!;

    protected override async Task OnInitializedAsync()
    {
        await TaskHandlerService.RunAsync(async () =>
        {
            users = DatabaseSimulator.SystemUsers;
        },
        setLoading: () => isInit = true,
        stopLoading: () => isInit = false,
        setError: GlobalExceptionService.Handle);
    }
}